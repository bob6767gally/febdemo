{
	"name": "ExistDataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "employee",
						"type": "DatasetReference"
					},
					"name": "sample"
				},
				{
					"dataset": {
						"referenceName": "csemp",
						"type": "DatasetReference"
					},
					"name": "emp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "exists",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "exists1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EEID as string,",
				"          {Full Name} as string,",
				"          {Job Title} as string,",
				"          Department as string,",
				"          {Business Unit} as string,",
				"          Gender as string,",
				"          Ethnicity as string,",
				"          Age as string,",
				"          {Hire Date} as string,",
				"          {Annual Salary} as string,",
				"          {Bonus %} as string,",
				"          Country as string,",
				"          City as string,",
				"          {Exit Date} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sample",
				"source(output(",
				"          EMPNO as string,",
				"          ENAME as string,",
				"          JOB as string,",
				"          MGR as string,",
				"          HIREDATE as string,",
				"          SAL as string,",
				"          COMM as string,",
				"          DEPTNO as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> emp",
				"sample, emp exists(EEID == EMPNO",
				"     && Department == JOB,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"exists1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}