{
	"name": "Conditionalsplitflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "employee",
						"type": "DatasetReference"
					},
					"name": "cssample"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dlgen2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "datagen2",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "datagen2_1",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "HRemployees"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EEID as string,",
				"          {Full Name} as string,",
				"          {Job Title} as string,",
				"          Department as string,",
				"          {Business Unit} as string,",
				"          Gender as string,",
				"          Ethnicity as string,",
				"          Age as string,",
				"          {Hire Date} as string,",
				"          {Annual Salary} as string,",
				"          {Bonus %} as string,",
				"          Country as string,",
				"          City as string,",
				"          {Exit Date} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> cssample",
				"cssample split(equals(Department, 'IT'),",
				"     equals(Department, 'Sales'),",
				"     disjoint: true) ~> HRemployees@(HRemployees, Payrollemployees, Director)",
				"HRemployees@HRemployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"HRemployees@Payrollemployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2",
				"HRemployees@Director sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink3"
			]
		}
	}
}